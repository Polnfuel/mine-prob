var Calc = (() => {
  var _scriptName = import.meta.url;
  
  return (
async function(moduleArg = {}) {
  var moduleRtn;

var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var arguments_=[];var thisProgram="./this.program";var scriptDirectory="";var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith("blob:")){scriptDirectory=""}else{scriptDirectory=scriptDirectory.slice(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}{readAsync=async url=>{var response=await fetch(url,{credentials:"same-origin"});if(response.ok){return response.arrayBuffer()}throw new Error(response.status+" : "+response.url)}}}else{}var out=console.log.bind(console);var err=console.error.bind(console);var wasmBinary;var wasmMemory;var ABORT=false;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;var runtimeInitialized=false;function updateMemoryViews(){var b=wasmMemory.buffer;HEAP8=new Int8Array(b);HEAP16=new Int16Array(b);HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);HEAP32=new Int32Array(b);HEAPU32=new Uint32Array(b);HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b);HEAP64=new BigInt64Array(b);HEAPU64=new BigUint64Array(b)}function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(onPreRuns)}function initRuntime(){runtimeInitialized=true;wasmExports["t"]()}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(onPostRuns)}var runDependencies=0;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module["monitorRunDependencies"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module["monitorRunDependencies"]?.(runDependencies);if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var wasmBinaryFile;function findWasmBinary(){return base64Decode("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BAJ/AkACf0HI1wAoAgAiBkEBIAF0IgJxRQRAQcjXACACIAZyNgIAIAQgAzYCAEEYIQFBCAwBCyAAQRkgAUEBdmtBACABQR9HG3QhASAEKAIAIQQDQCAEIgIoAgRBeHEgAEYNAiABQR12IQQgAUEBdCEBIAIgBEEEcWoiBigCECIEDQALIAYgAzYCEEEYIQEgAiEEQQgLIQAgAyICDAELIAIoAggiBCADNgIMIAIgAzYCCEEYIQBBCCEBQQALIQYgASADaiAENgIAIAMgAjYCDCAAIANqIAY2AgBB5NcAQeTXACgCAEEBayIAQX8gABs2AgALCzsBAn9BASAAIABBAU0bIQEDQAJAIAEQHyIADQBBtNsAKAIAIgJFDQAgAhEFAAwBCwsgAEUEQBA4CyAAC9IEAQR/IAEgACABRiIEOgAMAkAgBA0AA0AgASgCCCIELQAMDQECQAJAIAQoAggiAigCACIDIARGBEACQCACKAIEIgVFDQAgBS0ADA0AIARBAToADCACIAAgAkY6AAwgBUEBOgAMDAILAkAgBCgCACABRgRAIAQhAQwBCyAEIAQoAgQiASgCACIANgIEAkAgAEUEQCABIAI2AgggAiABNgIADAELIAAgBDYCCCAEKAIIIgMoAgAgASADNgIIIARGBEAgAyABNgIADAELIAMgATYCBAsgASAENgIAIAQgATYCCCABKAIIIgIoAgAhAwsgAUEBOgAMIAJBADoADCACIAMoAgQiADYCACAABEAgACACNgIICyADIAIoAggiADYCCAJAIAAoAgAgAkYEQCAAIAM2AgAMAQsgACADNgIECyADIAI2AgQgAiADNgIIDwsgA0UNASADLQAMDQEgBEEBOgAMIAIgACACRjoADCADQQE6AAwLIAIiASAARw0BDAILCwJAIAQoAgAiAyABRwRAIAQhAwwBCyAEIAMoAgQiADYCACAABEAgACAENgIIIAQoAgghAgsgAyACNgIIAkAgAigCACAERgRAIAIgAzYCAAwBCyACIAM2AgQLIAMgBDYCBCAEIAM2AgggAygCCCECCyADQQE6AAwgAkEAOgAMIAIgAigCBCIBKAIAIgA2AgQgAARAIAAgAjYCCAsgASACKAIIIgA2AggCQCAAKAIAIAJGBEAgACABNgIADAELIAAgATYCBAsgASACNgIAIAIgATYCCAsLcgEDf0EIEDYiAkGM1QA2AgAgAkH81QA2AgBBywgQPiIBQQ1qEBMiAEEANgIIIAAgATYCBCAAIAE2AgAgAEEMaiEAIAFBAWoiAQRAIABBywggAfwKAAALIAIgADYCBCACQazWADYCACACQbjWAEECEAcAC3QBAX8gAkUEQCAAKAIEIAEoAgRGDwsgACABRgRAQQEPCyABKAIEIgItAAAhAQJAIAAoAgQiAy0AACIARQ0AIAAgAUcNAANAIAItAAEhASADLQABIgBFDQEgAkEBaiECIANBAWohAyAAIAFGDQALCyAAIAFGC+UDAQV/IwBBEGsiAyQAIAMgACgCACIEQQhrKAIAIgI2AgwgAyAAIAJqNgIEIAMgBEEEaygCADYCCCADKAIIIgQgAUEAEBYhAiADKAIEIQUCQCACBEAgAygCDCEAIwBBQGoiASQAIAFBQGskAEEAIAUgABshAgwBCyMAQUBqIgIkACAAIAVOBEAgAkIANwIcIAJCADcCJCACQgA3AiwgAkIANwIUIAJBADYCECACIAE2AgwgAiAENgIEIAJBADYCPCACQoGAgICAgICAATcCNCACIAA2AgggBCACQQRqIAUgBUEBQQAgBCgCACgCFBEGACAAQQAgAigCHBshBgsgAkFAayQAIAYiAg0AIwBBQGoiAiQAIAJBADYCECACQaDOADYCDCACIAA2AgggAiABNgIEQQAhACACQRRqQQBBJ/wLACACQQA2AjwgAkEBOgA7IAQgAkEEaiAFQQFBACAEKAIAKAIYEQQAAkACQAJAIAIoAigOAgABAgsgAigCGEEAIAIoAiRBAUYbQQAgAigCIEEBRhtBACACKAIsQQFGGyEADAELIAIoAhxBAUcEQCACKAIsDQEgAigCIEEBRw0BIAIoAiRBAUcNAQsgAigCFCEACyACQUBrJAAgACECCyADQRBqJAAgAgsuAQF/QQQQNiIAQYzVADYCACAAQeTUADYCACAAQfjUADYCACAAQczVAEEBEAcAC6oCAQF/IwBBEGsiAyQAIAMgATYCBCADIAA2AgggAyACNgIAIAEvAQAiASACLwEASyECAkAgASAALwEATwRAIAJFDQEgA0EEaiICKAIAIgAvAQAhASAAIAMoAgAiAC8BADsBACAAIAE7AQAgAygCBC8BACADKAIIIgAvAQBPDQEgAC8BACEBIAAgAigCACIALwEAOwEAIAAgATsBAAwBCyACBEAgAygCCCIALwEAIQEgACADKAIAIgAvAQA7AQAgACABOwEADAELIAMoAggiAC8BACECIAAgA0EEaiIBKAIAIgAvAQA7AQAgACACOwEAIAMoAgAiAi8BACADKAIELwEATw0AIAEoAgAiAC8BACEBIAAgAiIALwEAOwEAIAAgATsBAAsgA0EQaiQAC8YCAQN/IAAoAggiBCAAKAIAIgVrQQF1IANPBEAgAyAAKAIEIgQgBWsiBkEBdUsEQCAEIAVHBEAgBgRAIAUgASAG/AoAAAsgACgCBCEECyACIAEgBmoiA2shAQJAIAIgA0YNACABRQ0AIAQgAyAB/AoAAAsgACABIARqNgIEDwsgAiABayEDAkAgASACRg0AIANFDQAgBSABIAP8CgAACyAAIAMgBWo2AgQPCyAFBEAgACAFNgIEIAUQEiAAQQA2AgggAEIANwIAQQAhBAsCQCADQQBIDQBB/////wcgBCADIAMgBEkbIARB/v///wdPGyIDQQBIDQAgACADQQF0IgQQEyIDNgIEIAAgAzYCACAAIAMgBGo2AgggAiABayEEAkAgASACRg0AIARFDQAgAyABIAT8CgAACyAAIAMgBGo2AgQPCxAVAAvIBQEFfyMAQRBrIgIkAEGC1wAtAAAhAyAAQQA2AgggAEIANwIAAkAgASADbiIFQf8BcSIERQRAIAFFBEAgAkEBOwEAIAIgAzsBAiACIANBAWo7AQQgACACIAJBBmpBAxAaDAILIAFBAWshBCABIANBAWtGBEAgAiABIANqOwEEIAIgBDsBACACIAMgBGo7AQIgACACIAJBBmpBAxAaDAILIAIgASADajsBBiACIAQ7AQAgAiADIARqOwEEIAIgAUEBaiIBOwECIAIgASADajsBCCAAIAIgAkEKakEFEBoMAQsgBEGD1wAtAAAiBkEBa0YEQCABIAMgBGxGBEAgAiABQQFqOwEEIAIgASADayIBOwEAIAIgAUEBajsBAiAAIAIgAkEGakEDEBoMAgsgAUEBayEEIAEgAyAGbEEBa0YEQCACIAQ7AQAgAiABIANrOwEEIAIgASADQX9zajsBAiAAIAIgAkEGakEDEBoMAgsgAiAEOwEAIAIgAUEBajsBAiACIAEgA0F/c2o7AQYgAiABIANrIgE7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IAJqQSg2AgRB4NcAQazbACgCADYCAAwECyACIANNDQIgASADSw0CIAAoAgxBCHENAiAAIAQgBWo2AgRB3NcAIANBeCADa0EHcSIAaiIBNgIAQdDXAEHQ1wAoAgAgBGoiAiAAayIANgIAIAEgAEEBcjYCBCACIANqQSg2AgRB4NcAQazbACgCADYCAAwDC0EAIQAMBgtBACEADAQLQdTXACgCACACSwRAQdTXACACNgIACyACIARqIQVBhNsAIQACQANAIAUgACgCACIBRwRAIAAoAggiAA0BDAILCyAALQAMQQhxRQ0DC0GE2wAhAANAAkAgACgCACIBIANNBEAgAyABIAAoAgRqIgVJDQELIAAoAgghAAwBCwtB0NcAIARBKGsiAEF4IAJrQQdxIgFrIgc2AgBB3NcAIAEgAmoiATYCACABIAdBAXI2AgQgACACakEoNgIEQeDXAEGs2wAoAgA2AgAgAyAFQScgBWtBB3FqQS9rIgAgACADQRBqSRsiAUEbNgIEIAFBjNsAKQIANwIQIAFBhNsAKQIANwIIQYzbACABQQhqNgIAQYjbACAENgIAQYTbACACNgIAQZDbAEEANgIAIAFBGGohAANAIABBBzYCBCAAQQhqIABBBGohACAFSQ0ACyABIANGDQAgASABKAIEQX5xNgIEIAMgASADayICQQFyNgIEIAEgAjYCAAJ/IAJB/wFNBEAgAkF4cUHs1wBqIQACf0HE1wAoAgAiAUEBIAJBA3Z0IgJxRQRAQcTXACABIAJyNgIAIAAMAQsgACgCCAshASAAIAM2AgggASADNgIMQQwhAkEIDAELQR8hACACQf///wdNBEAgAkEmIAJBCHZnIgBrdkEBcSAAQQF0a0E+aiEACyADIAA2AhwgA0IANwIQIABBAnRB9NkAaiEBAkACQEHI1wAoAgAiBUEBIAB0IgRxRQRAQcjXACAEIAVyNgIAIAEgAzYCAAwBCyACQRkgAEEBdmtBACAAQR9HG3QhACABKAIAIQUDQCAFIgEoAgRBeHEgAkYNAiAAQR12IQUgAEEBdCEAIAEgBUEEcWoiBCgCECIFDQALIAQgAzYCEAsgAyABNgIYQQghAiADIgEhAEEMDAELIAEoAggiACADNgIMIAEgAzYCCCADIAA2AghBACEAQRghAkEMCyADaiABNgIAIAIgA2ogADYC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AQBPDQAgBEEQaiICKAIAIgMvAQAhBSADIAQoAgwiAy8BADsBACADIAU7AQAgBCgCEC8BACABLwEATw0AIARBFGoiASgCACIDLwEAIQUgAyACKAIAIgIvAQA7AQAgAiAFOwEAIAQoAhQvAQAgAC8BAE8NACAEKAIYIgAvAQAhAiAAIAEoAgAiAC8BADsBACAAIAI7AQALIARBIGokAAsdACABBEAgACABKAIAECkgACABKAIEECkgARASCwsdACABBEAgACABKAIAECogACABKAIEECogARASCwsdACABBEAgACABKAIAECsgACABKAIEECsgARASCwsdACABBEAgACABKAIAECwgACABKAIEECwgARASCwsdACABBEAgACABKAIAEC0gACABKAIEEC0gARASCws4ACABBEAgACABKAIAEC4gACABKAIEEC4gASgCFCIABEAgASAANgIYIAEoAhwaIAAQEgsgARASCwsLACAAEDAaIAAQEgsyAQJ/IABB/NUANgIAIAAoAgRBDGsiASABKAIIQQFrIgI2AgggAkEASARAIAEQEgsgAAv2KAIRfwJ+IwBBMGsiDSQAAkACQCADKAIEIgxFBEAgA0EEaiIJIQgMAQsDQCAMIggvARAiCSAASwRAIAgiCSgCACIMDQEMAgsgACAJTQ0CIAgoAgQiDA0ACyAIQQRqIQkLQSAQEyIMQQA2AhwgDEIANwIUIAwgADsBECAMIAg2AgggDEIANwIAIAkgDDYCACADKAIAKAIAIggEQCADIAg2AgALIAMoAgQgDBAUIAMgAygCCEEBajYCCAsgDUEANgIsIA1CADcCJAJAIAwoAhgiCCAMKAIUIglGBEAgDUIANwIcIA0gDUEcaiIUNgIYDAELIAggCWsiCEEATgRAIA0gCBATIhA2AiQgDSAIIBBqIhU2AiwgCARAIBAgCSAI/AoAAAsgDSAVNgIoIA0gDUEcaiIUNgIYIA1CADcCHCACQQRqIRcgECEPA0AgDy8BACEKAkACQCAXIgkiCCgCACIMRQ0AA0AgDCIILwEQIgkgCksEQCAIIgkoAgAiDA0BDAILIAkgCk8NAiAIKAIEIgwNAAsgCEEEaiEJC0EgEBMiDEEANgIcIAxCADcCFCAMIAo7ARAgDCAINgIIIAxCADcCACAJIAw2AgAgAigCACgCACIIBEAgAiAI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FCADQQE2AkQgASADQRRqIARBASABKAIAKAIcEQIAIAMoAiwiAEEBRgRAIAIgAygCJDYCAAsgAEEBRgsgA0HQAGokAA8LIANBvwo2AgggA0HlAzYCBCADQeAINgIAEDcACwoAIAAgAUEAEBYLpQQBBX8gACgCBCICED5BAWoiARAfIgAEfwJ/IAFBgARPBEAgAQRAIAAgAiAB/AoAAAsgAAwBCyAAIAFqIQMCQCAAIAJzQQNxRQRAAkAgAEEDcUUEQCAAIQEMAQsgAUUEQCAAIQEMAQsgACEBA0AgASACLQAAOgAAIAJBAWohAiABQQFqIgFBA3FFDQEgASADSQ0ACwsgA0F8cSEEAkAgA0HAAEkNACABIARBQGoiBUsNAANAIAEgAigCADYCACABIAIoAgQ2AgQgASACKAIINgIIIAEgAigCDDYCDCABIAIoAhA2AhAgASACKAIUNgIUIAEgAigCGDYCGCABIAIoAhw2AhwgASACKAIgNgIgIAEgAigCJDYCJCABIAIoAig2AiggASACKAIsNgIsIAEgAigCMDYCMCABIAIoAjQ2AjQgASACKAI4NgI4IAEgAigCPDYCPCACQUBrIQIgAUFAayIBIAVNDQALCyABIARPDQEDQCABIAIoAgA2AgAgAkEEaiECIAFBBGoiASAESQ0ACwwBCyADQQRJBEAgACEBDAELIANBBGsiBSAASQRAIAAhAQwBCyAAIQEDQCABIAItAAA6AAAgASACLQABOgABIAEgAi0AAjoAAiABIAItAAM6AAMgAkEEaiECIAFBBGoiASAFTQ0ACwsgASADSQRAA0AgASACLQAAOgAAIAJBAWohAiABQQFqIgEgA0cNAAsLIAALBUEACwswAQF/IwBBEGsiBCQAIAAoAgAhACAEIAM6AA8gASACIARBD2ogABEIACAEQRBqJAALFAAgACgCACABaiACLQAAOgAAQQELTQEBfyMAQRBrIgMkACADQQZqIAEgAiAAKAIAEQMAQQIhACADLQAHQQFxBEAgAyADLQAGNgIIQdDRACADQQhqEAohAAsgA0EQaiQAIAALMwECfyABKAIEIAEoAgAiAWsgAksEQEEBIQQgASACai0AACEDCyAAIAQ6AAEgACADOgAACzUBAX8gASAAKAIEIgJBAXVqIQEgACgCACEAIAEgAkEBcQR/IAEoAgAg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NgIECyACIAY2AgQgBiACNgIIIAIoAgghAwsgAkEBOgAMIANBADoADCADIAMoAgQiBigCACICNgIEIAIEQCACIAM2AggLIAYgAygCCCICNgIIAkAgAigCACADRgRAIAIgBjYCAAwBCyACIAY2AgQLIAYgAzYCACADIAY2AggLIBIgEigCCEEBajYCCAsgECABQQhqIgFHDQALDAELDAYLIA0QEgsgBARAIAQQEgsgFkEBaiIWIBhHDQALDAELIAUoAnQhAiAFKAJ4IAVBADYCoAEgBUIANwKYAUEAIQhBACEKIAJrQQxtQf8BcSIUBEAgBSAUQQxsIgEQEyIINgKYASAFIAEgCGoiCjYCoAEgCCEDIAFBDGsiAkEMbiIBQQdxQQdHBEAgAUEBakEHcSEBQQAhBgNAIANCADcCBCADIANBBGo2AgAgA0EMaiEDIAZBAWoiBiABRw0ACwsgAkHUAE8EQANAIANCADcCECADQgA3AgQgA0IANwIcIANCADcCKCADQgA3AjQgA0IANwJAIANCADcCTCADQgA3AlggAyADQQRqNgIAIAMgA0EQajYCDCADIANBHGo2AhggAyADQShqNgIkIAMgA0E0ajYCMCADIANBQGs2AjwgAyADQcwAajYCSCADIANB2ABqNgJUIANB4ABqIgMgCkcNAAsLIAUgCjYCnAFBACEWA0AgBUEANgJYIAVCADcCUEEAIQdBACEPAkAgFkEMbCIDIAUoAmhqIgIoAgQiASACKAIAIgJGDQAgASACayIBQQBIDQUgBSABEBMiBzYCVCAFIAc2AlAgBSABIAdqIg82AlggAUUNACAHIAIgAfwKAAALIAVBADYCQCAFQgA3AjggBSgCdCADaiICKAIEIgEgAigCACICRwRAAkAgASACayIBQQBOBEAgBSABEBMiDTYCPCAFIA02AjggBSABIA1qIhc2AkAgAQRAIA0gAiAB/AoAAAsgDyAHayEYIAMgCGoiEUEEaiEMIA0hAQNAQgAhJ0EAIQYCQCAHIA9GBEBBACECQgAhJgwBCyABKQMAISVBACEDQgAhJkEAIQIDQCAlIAOtiEIBg6cEQEIAISRCASEjAkAgBiAHai0AACIEQcAAcQRAQgEgBEFAaq2GISRCACEjDAELIARFDQBCACAErSIjhkIBQcAAIARrrYiEISRCASAjhiEjCyAFICM3AwAgBSAkNwMIIAUpAwggJoQhJiAFKQMAICeEIScgAkEBaiECCyAYIANBAWoiA0H/AXEiBksNAAsLAkACQCAMIgkiAygCACIGRQ0AA0AgJyAGIgMpAxAiI1ogJiADKQMYIiVaICUgJlEiBBsEQCAjICdaICUgJlogBBsNAyADKAIEIgYNASADQQRqIQkMAgsgAyEJIAMoAgAiBg0ACwsDQAJAIwBBEGsiFSQAQdQAEB8iBAR/IARBCGshBgJAIARBD3FFBEAgBiEEDAELIARBBGsiECgCACIOQXhxIARBD2pBcHFBCGsiBEEQQQAgBCAGa0EPTRtqIgQgBmsiE2shEiAOQQNxRQRAIAYoAgAhBiAEIBI2AgQgBCAGIBNqNgIADAELIAQgEiAEKAIEQQFxckECcjYCBCAEIBJqIg4gDigCBEEBcjYCBCAQIBMgECgCAEEBcXJBAnI2AgAgBiATaiIOIA4oAgRBAXI2AgQgBiATED0LAkAgBCgCBCIOQQNxRQ0AIA5BeHEiBkHIAE0NACAEIA5BAXFBOnI2AgQgBEE4aiIQIAZBOGsiDkEDcjYCBCAEIAZqIgYgBigCBEEBcjYCBCAQIA4QPQsgBEEIagVBAAsiBAR/IBUgBDYCDEEABUEwCyEEQQAgFSgCDCAEGyEEIBVBEGokACAEDQBBtNsAKAIAIgZFDQAgBhEFAAwBCwsgBEUEQBA4CyAEICY3AxggBCAnNwMQIAQgAjoAICAEIAM2AgggBEIANwMAIAkgBDYCACARKAIAKAIAIgIEQCARIAI2AgALIAQgBCAMKAIAIg5GIgI6AAwCQCACDQADQCAEKAIIIgYtAAwNAQJAAkAgBigCCCIDKAIAIgIgBkYEQAJAIAMoAgQiCUUNACAJLQAMDQAgBkEBOgAMIAMgAyAORjoADCAJQQE6AAwMAgsCQCAGKAIAIARGBEAgBiEEDAELIAYgBigCBCIEKAIAIgI2AgQCQCACRQRAIAQgAzYCCCADIAQ2AgAMAQsgAiAGNgIIIAYoAggiAygCACAEIAM2AgggBkYEQCADIAQ2AgAMAQsgAyAENgIECyAEIAY2AgAgBiAENgIIIAQoAggiAygCACECCyAEQQE6AAwgA0EAOgAMIAMgAigCBCIENgIAIAQEQCAEIAM2AggLIAIgAygCCCIENgIIAkAgBCgCACADRgRAIAQgAjYCAAwBCyAEIAI2AgQLIAIgAzYCBCADIAI2AggMBAsgAkUNASACLQAMDQEgBkEBOgAMIAMgAyAORjoADCACQQE6AAwLIA4gAyIERw0BDAILCwJAIAYoAgAiAiAERwRAIAYhAgwBCyAGIAIoAgQiBDYCACAEBEAgBCAGNgIIIAYoAgghAwsgAiADNgIIAkAgAygCACAGRgRAIAMgAjYCAAwBCyADIAI2AgQLIAIgBjYCBCAGIAI2AgggAigCCCEDCyACQQE6AAwgA0EAOgAMIAMgAygCBCIEKAIAIgI2AgQgAgRAIAIgAzYCCAsgBCADKAIIIgI2AggCQCACKAIAIANGBEAgAiAENgIADAELIAIgBDYCBAsgBCADNgIAIAMgBDYCCAsgESARKAIIQQFqNgIICyAXIAFBCGoiAUcNAAsMAQsMBgsgDRASCyAHBEAgBxASCyAWQQFqIhYgFEcNAAsLIAVBADYCQCAFQgA3AjggBSAFQagBaiIMNgKkASAFQgA3AqgBQQBCAEIAQQAgBUGYAWogBUE4aiAFQaQBahBFIAUgBUGQAWoiBDYCjAEgBUIANwKQAQJAIAUoAqQBIgIgDEYNAANAAkAgAi0ADiEBIAItAA0hDUEAIQkgBUEANgJcIAVCADcCVCAFIA06AFBBACEHAkAgBSgCOCABQQxsaiIDKAIEIgEgAygCACIDRg0AIAEgA2siAUEASA0BIAUgARATIgc2AlQgBSABIAdqIgk2AlwgAUUNACAHIAMgAfwKAAALIAQiASEDAkACQAJAIAUoApABIgZFDQADQCAGIgMtABAiASANSwRAIAMhASADKAIAIgYNAQwCCyABIA1PDQIgAygCBCIGDQALIANBBGohAQtBIBATIgYgCTYCHCAGIAk2AhggBiAHNgIUIAYgDToAECAGIAM2AgggBkIANwIAIAEgBjYCACAFKAKMASgCACIBBEAgBSABNgKMAQsgBSgCkAEgBhAUIAUgBSgClAFBAWo2ApQBDAELIAdFDQAgBxASCwJAIAIoAgQiBgRAA0AgBiIDKAIAIgYNAAwCCwALA0AgAiACKAIIIgMoAgBHIAMhAg0ACwsgDCADIgJHDQEMAgsLDAMLIAVBpAFqIAUoAqgBECIgBSgCOCICBEAgAiIGIAUoAjwiA0cEQANAIANBDGsiASgCACIGBEAgA0EIayAGNgIAIANBBGsoAgAaIAYQEgsgASIDIAJHDQALIAUoAjghBgsgBSACNgI8IAUoAkAaIAYQEgsgBUEUaiAFKAIYEB0gBSAFKAKMATYCFCAFIAUoApABIgM2AhggBSAFKAKUASIBNgIcAkAgAUUEQCAFIAs2AhQMAQsgAyALNgIIIAVCADcCkAEgBSAENgKMAUEAIQMLIAVBjAFqIAMQHSAIRQ0BIAggCkcEQCAKIQMDQCADQQxrIgEgA0EIaygCABAqIAEiAyAIRw0ACwsgCBASDAELQQBCAEEAIAVBmAFqIAVBOGogBUGkAWoQRCAFIAVBkAFqIgQ2AowBIAVCADcCkAECQCAFKAKkASICIBdGDQADQAJAIAItAA4hASACLQANIQxBACEJIAVBADYCXCAFQgA3AlQgBSAMOgBQQQAhBwJAIAUoAjggAUEMbGoiAygCBCIBIAMoAgAiA0YNACABIANrIgFBAEgNASAFIAEQEyIHNgJUIAUgASAHaiIJNgJcIAFFDQAgByADIAH8CgAACyAEIgEhAwJAAkACQCAFKAKQASIGRQ0AA0AgBiIDLQAQIgEgDEsEQCADIQEgAygCACIGDQEMAgsgASAMTw0CIAMoAgQiBg0ACyADQQRqIQELQSAQEyIGIAk2AhwgBiAJNgIYIAYgBzYCFCAGIAw6ABAgBiADNgIIIAZCADcCACABIAY2AgAgBSgCjAEoAgAiAQRAIAUgATYCjAELIAUoApABIAYQFCAFIAUoApQBQQFqNgKUAQwBCyAHRQ0AIAcQEgsCQCACKAIEIgYEQANAIAYiAygCACIGDQAMAgsACwNAIAIgAigCCCIDKAIARyADIQINAAsLIBcgAyICRw0BDAILCwwCCyAIBEAgCCAKRwRAIAohAwNAIANBDGsiASADQQhrKAIAECkgASIDIAhHDQALCyAIEBILIAVBpAFqIAUoAqgBECIgBSgCOCICBEAgAiIGIAUoAjwiA0cEQANAIANBDGsiASgCACIGBEAgA0EIayAGNgIAIANBBGsoAgAaIAYQEgsgASIDIAJHDQALIAUoAjghBgsgBSACNgI8IAUoAkAaIAYQEgsgBUEUaiAFKAIYEB0gBSAFKAKMATYCFCAFIAUoApABIgM2AhggBSAFKAKUASIBNgIcAkAgAUUEQCAFIAs2AhQMAQsgAyALNgIIIAVCADcCkAEgBSAENgKMAUEAIQMLIAVBjAFqIAMQHQsgBUEUaiEUQQAhB0EAIQhBACERQQAhDEEAIQojAEEgayILJAAgC0EANgIQIAtCADcCCAJAQYDXAC8BAEUNAAJAA0ACQAJAQfTWACgCACAHai0AAEEJRw0AIAtBFGogBxAbQQEhAiALKAIUIgMgCygCGCIGRwRAQQAhAUH01gAoAgAhBCADIQIDQCABIAQgAi8BAGotAABBC2tB/wFxQf4BSWohASACQQJqIgIgBkcNAAsgAUH/AXFFIQILIAMEQCALIAM2AhggCygCHBogAxASCyAIQQFqIQggAkUNAAJAIAogEUsEQCARIAc7AQAgEUECaiERDAELIBEgDGsiCUEBdSIEQX5MDQIgCUH/////ByAKIAxrIgIgBEEBaiIBIAEgAkkbIAJB/v///wdPGyIGBH8gBkEASA0FIAZBAXQQEwVBAAsiAmoiAyAHOwEAIAMgBEEBdGshASAJBEAgASAMIAn8CgAACyALIAIgBkEBdGoiCjYCECALIANBAmoiETYCDCALIAE2AgggDARAIAwQEgsgASEMCyALIBE2AgwLIAdBAWoiB0GA1wAvAQBJDQEMAwsLEBUACxAYAAtBmNcALQAAIQZBhtcALwEAIQQgCyALQRhqIgk2AhQgC0IANwIYIBRBBGohDQJAIBQoAgQiAUUEQCANIQEDQCABIAEoAggiAigCAEYgAiEBDQALDAELA0AgASICKAIEIgENAAsLIAItABAhEwJAIA0gFCgCACICRgRAIAYhCgwBC0QAAAAAAADwPyAEuCAIQf//A3G4oyIaoSAaoyEfIAYhCgNAIAIoAhQgCkH/AXFBAnRqKAIAuCEhIBMgAi0AECIQa7chIEEAIQEjAEEQayIOJAAgH70iIyEkAkACQCAgvSIlQjSIpyIHQf8PcSIEQb4IayIDQf9+SyAjQjSIpyIPQf8Pa0GCcE9xDQAgJUIBhiIjQoCAgICAgIAQfEKBgICAgICAEFQEQEQAAAAAAADwPyEaICRCgICAgICAgPg/UQ0CICNQDQIgI0KBgICAgICAcFQgJEIBhiIjQoCAgICAgIBwWHFFBEAgHyAgoCEaDAMLICNCgICAgICAgPD/AFENAkQAAAAAAAAAACAgICCiICVCAFMgI0KAgICAgICA8P8AVHMbIRoMAgsgJEIBhkKAgICAgICAEHxCgYCAgICAgBBUBEAgHyAfoiEaICRCAFMEQCAamiAaICUQQEEBRhshGgsgJUIAWQ0CIwBBEGsiAUQAAAAAAADwPyAaozkDCCABKwMIIRoMAgsgJEIAUwRAICUQQCIBRQRAIB8gH6EiGiAaoyEaDAMLIA9B/w9xIQ8gH71C////////////AIMhJEGAgBBBACABQQFGGyEBCyADQf9+TQRARAAAAAAAAPA/IRogJEKAgICAgICA+D9RDQIgBEG9B00EQCAgICCaICRCgICAgICAgPg/VhtEAAAAAAAA8D+gIRoMAwsgB0H/D0sgJEKAgICAgICA+D9WRwRAIwBBEGsiAUQAAAAAAAAAcDkDCCABKwMIRAAAAAAAAABwoiEaDAMLIwBBEGsiAUQAAAAAAAAAEDkDCCABKwMIRAAAAAAAAAAQoiEaDAILIA8NACAfRAAAAAAAADBDor1C////////////AINCgICAgICAgKADfSEkCwJ8IA4gJEKAgICA0Kql8z99IiNCNIentyIcQeAtKwMAoiAjQi2Ip0H/AHFBBXQiA0G4LmorAwCgICQgI0KAgICAgICAeIN9IiNCgICAgAh8QoCAgIBwg78iHSADQaAuaisDACIaokQAAAAAAADwv6AiGyAjvyAdoSAaoiIdoCIeIBxB2C0rAwCiIANBsC5qKwMAoCIaIB4gGqAiHKGgoCAdIB5B6C0rAwAiGqIiHSAbIBqiIhqgoqAgGyAaoiIaIBwgHCAaoCIcoaCgIB4gHiAdoiIaoiAaIBogHkGYLisDAKJBkC4rAwCgoiAeQYguKwMAokGALisDAKCgoiAeQfgtKwMAokHwLSsDAKCgoqAiGiAcIBwgGqAiHKGgOQMIICVCgICAQIO/IhogHL1CgICAQIO/Ih2iIRsgICAaoSAdoiAgIA4rAwggHCAdoaCioAJAIBu9QjSIp0H/D3EiBEHJB2tBP0kNACAEQckHSQRAIBtEAAAAAAAA8D+gIhqaIBogARsMAgsgBEGJCElBACEEDQAgG71CAFMEQCMAQRBrIgNEAAAAAAAAAJBEAAAAAAAAABAgARs5AwggAysDCEQAAAAAAAAAEKIMAgsjAEEQayIDRAAAAAAAAADwRAAAAAAAAABwIAEbOQMIIAMrAwhEAAAAAAAAAHCiDAELIBtB6BwrAwCiQfAcKwMAIhqgIh0gGqEiGkGAHSsDAKIgGkH4HCsDAKIgG6CgoCIcIByiIhogGqIgHEGgHSsDAKJBmB0rAwCgoiAaIBxBkB0rAwCiQYgdKwMAoKIgHb0iI6dBBHRB8A9xIgNB2B1qKwMAIBygoKAhHSADQeAdaikDACAjIAGtfEIthnwhJSAERQRAAnwgI0KAgICACINQBEAgJUKAgICAgICAiD99vyIaIB2iIBqgRAAAAAAAAAB/ogwBCyAlQoCAgICAgIDwP3wiI78iGyAdoiIdIBugIh6ZRAAAAAAAAPA/YwR8IwBBEGsiASABRAAAAAAAABAAOQMIIAErAwhEAAAAAAAAEACiOQMIICNCgICAgICAgICAf4O/IB5EAAAAAAAA8L9EAAAAAAAA8D8gHkQAAAAAAAAAAGMbIhygIhogHSAbIB6hoCAeIBwgGqGgoKAgHKEiGiAaRAAAAAAAAAAAYRsFIB4LRAAAAAAAABAAogsMAQsgJb8iGiAdoiAaoAshGgsgDkEQaiQAIAkiByEBAkACQCALKAIYIgNFDQADQCADIgEtABAiAyAQSwRAIAEhByABKAIAIgMNAQwCCyADIBBPDQIgASgCBCIDDQALIAFBBGohBwtBIBATIgMgGjkDGCADIBA6ABAgAyABNgIIIANCADcCACAHIAM2AgAgCygCFCgCACIBBEAgCyABNgIUCyALKAIYIAMQFCALIAsoAhxBAWo2AhxBmNcALQAAIQoLIBogIaICQCACKAIEIgMEQANAIAMiASgCACIDDQAMAgsACwNAIAIgAigCCCIBKAIARyABIQINAAsLICKgISIgDSABIgJHDQALIBQoAgAhAkGG1wAvAQAhBAsgCCAGayEXAnwgAiANRgRAIAQhCEQAAAAAAAD4fwwBCyAXQQFqIRggF0H//wNxuCEdRAAAAAAAAAAAIRwgBCEIRAAAAAAAAAAAISEDQCACLQAQIQcgCSIGIQECQAJAIAsoAhgiA0UNAANAIAdB/wFxIgYgAyIBLQAQIgNJBEAgASEGIAEoAgAiAw0BDAILIAMgBk8EQCABIQMMAwsgASgCBCIDDQALIAFBBGohBgtBIBATIgNCADcDGCADIAc6ABAgAyABNgIIIANCADcCACAGIAM2AgAgCygCFCgCACIBBEAgCyABNgIUCyALKAIYIAMQFCALIAsoAhxBAWo2AhxBhtcALwEAIQhBmNcALQAAIQogAi0AECEHCyAIIAdB/wFxIhVrIRIgAysDGCACKAIUIApB/wFxQQJ0aigCALiiIRoCfCAEIBNGBEAgEkH//wNxIQNEAAAAAAAA8D8hGwJAIBMgFUYNACAIQf//A3EgFUYNACATIBVrIgFBAXEgGCASa0H//wNxIRACQCABQf//A3FBAUYEQEEAIQEMAQsgAUH+/wNxIQ9BACEBQQAhBwNAIBsgASAQariiIAMgAWu3oyABQQFyIgYgEGq4oiADIAZrt6MhGyABQQJqIQEgB0ECaiIHIA9HDQALC0UNACAbIAEgEGq4oiADIAFrt6MhGwsgGiAboiASQf//A3G4IB2joiAhoAwBC0QAAAAAAADwPyEbAkAgEyAVRg0AIBJBAWtB//8DcSIQRQ0AIBMgFWsiAUEBcSAYIBJrQf//A3EhDgJAIAFB//8DcUEBRgRAQQAhAQwBCyABQf7/A3EhBkEAIQFBACEHA0AgGyABIA5quKIgECABa7ejIAFBAXIiAyAOariiIBAgA2u3oyEbIAFBAmohASAHQQJqIgcgBkcNAAsLRQ0AIBsgASAOariiIBAgAWu3oyEbCyASQf//A3EhAyAaIBuiICGgCyEhRAAAAAAAAPA/IRsCQCATIBVGDQAgCEH//wNxIBVGDQAgEyAVayIBQQFxIBggEmtB//8DcSEQAkAgAUH//wNxQQFGBEBBACEBDAELIAFB/v8DcSEPQQAhAUEAIQcDQCAbIAEgEGq4oiADIAFrt6MgAUEBciIGIBBquKIgAyAGa7ejIRsgAUECaiEBIAdBAmoiByAPRw0ACwtFDQAgGyABIBBquKIgAyABa7ejIRsLIBogG6ICQCACKAIEIgMEQANAIAMiASgCACIDDQAMAgsACwNAIAIgAigCCCIBKAIARyABIQINAAsLIBygIRwgDSABIgJHDQALICEgHKMLIRogBCATRwR8IBogCEH//wNxIBNrt6IgF0H//wNxuKMFIBoLRAAAAAAAAFlAohA/IRogDCARRwR/IBpEAAAAAADgYkCg/AMhASAMIQIDQEH01gAoAgAgAi8BAGogAToAACACQQJqIgIgEUcNAAtBmNcALQAABSAKC0H/AXEEQEEAIQoDQCALKAIcIRECQCANIBQoAgAiA0YEQEQAAAAAAAAAACEbDAELRAAAAAAAAAAAIRsgCygCFCEIIApBAnQhDwNAIAMtABAhByAJIgQhAiADKAIUIA9qKAIAuAJ8AkACQCALKAIYIgFFDQADQCABIgItABAiASAHSwRAIAIhBCACKAIAIgENAQwCCyABIAdPDQIgAigCBCIBDQALIAJBBGohBAtBIBATIgZCADcDGCAGIAc6ABAgBiACNgIIIAZCADcCACAEIAY2AgAgCCgCACIBBEAgCyABNgIUIAEhCAsgBiAGIAsoAhgiDkYiAToADAJAIAENAANAIAYoAggiAS0ADA0BAkACQCABKAIIIgIoAgAiByABRgRAAkAgAigCBCIERQ0AIAQtAAwNACABQQE6AAwgAiACIA5GOgAMIARBAToADAwCCwJAIAEoAgAgBkYEQCABIQYMAQsgASABKAIEIgYoAgAiBDYCBAJAIARFBEAgBiACNgIIIAIgBjYCAAwBCyAEIAE2AgggASgCCCIEKAIAIQIgBiAENgIIIAEgAkYEQCAEIAY2AgAMAQsgBCAGNgIECyAGIAE2AgAgASAGNgIIIAYoAggiAigCACEHCyAGQQE6AAwgAkEAOgAMIAIgBygCBCIBNgIAIAEEQCABIAI2AggLIAcgAigCCCIBNgIIAkAgASgCACACRgRAIAEgBzYCAAwBCyABIAc2AgQLIAcgAjYCBCACIAc2AggMBAsgB0UNASAHLQAMDQEgAUEBOgAMIAIgAiAORjoADCAHQQE6AAwLIA4gAiIGRw0BDAILCwJAIAEoAgAiByAGRwRAIAEhBwwBCyABIAcoAgQiBDYCACAEBEAgBCABNgIIIAEoAgghAgsgByACNgIIAkAgAigCACABRgRAIAIgBzYCAAwBCyACIAc2AgQLIAcgATYCBCABIAc2AgggBygCCCECCyAHQQE6AAwgAkEAOgAMIAIgAigCBCIEKAIAIgE2AgQgAQRAIAEgAjYCCAsgBCACKAIIIgE2AggCQCABKAIAIAJGBEAgASAENgIADAELIAEgBDYCBAsgBCACNgIAIAIgBDYCCAsgEUEBaiERRAAAAAAAAAAADAELIAIrAxgLogJAIAMoAgQiAQRAA0AgASICKAIAIgENAAwCCwALA0AgAyADKAIIIgIoAgBHIAIhAw0ACwsgG6AhGyANIAIiA0cNAAsLIAsgETYCHEH01gAoAgBBjNcAKAIAIApBAXRqLwEAaiAbICKjRAAAAAAAAFlAohA/RAAAAAAAAElAoPwDOgAAIApBAWoiCkGY1wAtAABJDQALCyALQRRqIAsoAhgQKyAMBEAgCyAMNgIMIAwQEgsgC0EgaiQAIABBADYCCCAAQgA3AgACQEH41gAoAgAiAUH01gAoAgAiA0cEQCABIANrIgRBAEgNASAAIAQQEyICNgIAIAAgAiAEaiIBNgIIIAQEQCACIAMgBPwKAAALIAAgATYCBAsgBUEUaiAFKAIYEB0gBSgCaCIBBEAgASIGIAUoAmwiA0cEQANAIANBDGsiACgCACICBEAgA0EIayACNgIAIANBBGsoAgAaIAIQEgsgACIDIAFHDQALIAUoAmghBgsgBSABNgJsIAUoAnAaIAYQEgsgBSgCdCIBBEAgASIGIAUoAngiA0cEQANAIANBDGsiACgCACICBEAgA0EIayACNgIAIANBBGsoAgAaIAIQEgsgACIDIAFHDQALIAUoAnQhBgsgBSABNgJ4IAUoAnwaIAYQEgsgBSgCgAEiAQRAIAEiBiAFKAKEASIDRwRAA0AgA0EMaygCACIABEAgA0EIayAANgIAIANBBGsoAgAaIAAQEgsgA0EYayIAKAIAIgIEQCADQRRrIAI2AgAgA0EQaygCABogAhASCyAAIgMgAUcNAAsgBSgCgAEhBgsgBSABNgKEASAFKAKIARogBhASCyAFQbABaiQADwsLEBUACyMAQfTWACgCACIABEBB+NYAIAA2AgBB/NYAKAIAGiAAEBILC6cBAEH01gBCADcCAEH81gBBADYCAEGM1wBCADcCAEGU1wBBADYCAEGc1wBCADcCAEGk1wBBADYCAEGo1wBBFjYCAEGs1wBBADYCAEG6CkEFQfAPQbAQQQNBBEEAQQAQBhBCQazXAEG01wAoAgA2AgBBtNcAQajXADYCAEG41wBBFzYCAEG81wBBADYCABBBQbzXAEG01wAoAgA2AgBBtNcAQbjXADYCAAsL60uGAQBBgAgL5Ad1bnNpZ25lZCBzaG9ydAB1bnNpZ25lZCBpbnQAc2V0AGdldABmbG9hdAB2ZWN0b3JVaW50OF90AHVpbnQ2NF90ACVzOiVkOiAlcwB2ZWN0b3IAdW5zaWduZWQgY2hhcgAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmN4eGFiaS9zcmMvcHJpdmF0ZV90eXBlaW5mby5jcHAAc3RkOjpleGNlcHRpb24AYm9vbABwdXNoX2JhY2sAYmFkX2FycmF5X25ld19sZW5ndGgAdW5zaWduZWQgbG9uZwBzdGQ6OndzdHJpbmcAc3RkOjpzdHJpbmcAc3RkOjp1MTZzdHJpbmcAc3RkOjp1MzJzdHJpbmcAcmVzaXplAGRvdWJsZQB2b2lkAHN0ZDo6YmFkX2FsbG9jAGNhbGMAY2F0Y2hpbmcgYSBjbGFzcyB3aXRob3V0IGFuIG9iamVjdD8AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZmxvYXQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ2NF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ2NF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8Y2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGRvdWJsZT4AQfAPC8QFBAgAAAQIAADQKAAA0CgAAPQoAABoKQAADAgAAE5TdDNfXzI2dmVjdG9ySWhOU185YWxsb2NhdG9ySWhFRUVFAHBwcGlpaQAA7CkAAGAIAAAAAAAAAwAAAHgIAAAAAAAAxAkAAAAAAAD0CQAAAAAAAE5TdDNfXzI4b3B0aW9uYWxJaEVFAAAAAJApAACECAAAtAgAAE5TdDNfXzIyN19fb3B0aW9uYWxfbW92ZV9hc3NpZ25fYmFzZUloTGIxRUVFAAAAAJApAADACAAA8AgAAE5TdDNfXzIyN19fb3B0aW9uYWxfY29weV9hc3NpZ25fYmFzZUloTGIxRUVFAAAAAJApAAD8CAAAJAkAAE5TdDNfXzIyMF9fb3B0aW9uYWxfbW92ZV9iYXNlSWhMYjFFRUUAAACQKQAAMAkAAFgJAABOU3QzX18yMjBfX29wdGlvbmFsX2NvcHlfYmFzZUloTGIxRUVFAAAAkCkAAGQJAACQCQAATlN0M19fMjIzX19vcHRpb25hbF9zdG9yYWdlX2Jhc2VJaExiMEVFRQAAAABoKQAAmAkAAE5TdDNfXzIyNF9fb3B0aW9uYWxfZGVzdHJ1Y3RfYmFzZUloTGIxRUVFAAAAaCkAAMwJAABOU3QzX18yMThfX3NmaW5hZV9jdG9yX2Jhc2VJTGIxRUxiMUVFRQAAaCkAAPwJAABOU3QzX18yMjBfX3NmaW5hZV9hc3NpZ25fYmFzZUlMYjFFTGIxRUVFAAAAAEgqAAA4CgAAAAAAAAQIAABQTlN0M19fMjZ2ZWN0b3JJaE5TXzlhbGxvY2F0b3JJaEVFRUUAAAAASCoAAHAKAAABAAAABAgAAFBLTlN0M19fMjZ2ZWN0b3JJaE5TXzlhbGxvY2F0b3JJaEVFRUUAcHAAdgB2cAAAACgKAACgKAAAKAoAANAoAAB2cHBpAEHAFQs0oCgAACgKAAAkKQAA0CgAAHZwcHBpAAAAJCkAAGAKAABwcHAAOAgAAAQIAAAkKQAAcHBwcABBgBYL2Ae4KAAABAgAACQpAADQKAAAaXBwcGkAAABoKQAAIAsAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFAABoKQAAaAsAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0l3TlNfMTFjaGFyX3RyYWl0c0l3RUVOU185YWxsb2NhdG9ySXdFRUVFAABoKQAAsAsAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEc05TXzExY2hhcl90cmFpdHNJRHNFRU5TXzlhbGxvY2F0b3JJRHNFRUVFAAAAaCkAAPwLAABOU3QzX18yMTJiYXNpY19zdHJpbmdJRGlOU18xMWNoYXJfdHJhaXRzSURpRUVOU185YWxsb2NhdG9ySURpRUVFRQAAAGgpAABIDAAATjEwZW1zY3JpcHRlbjN2YWxFAABoKQAAZAwAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWNFRQAAaCkAAIwMAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lhRUUAAGgpAAC0DAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaEVFAABoKQAA3AwAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXNFRQAAaCkAAAQNAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l0RUUAAGgpAAAsDQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaUVFAABoKQAAVA0AAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWpFRQAAaCkAAHwNAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lsRUUAAGgpAACkDQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbUVFAABoKQAAzA0AAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXhFRQAAaCkAAPQNAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l5RUUAAGgpAAAcDgAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJZkVFAABoKQAARA4AAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWRFRQAAAAAAAP6CK2VHFWdAAAAAAAAAOEMAAPr+Qi52vzo7nrya9wy9vf3/////3z88VFVVVVXFP5ErF89VVaU/F9CkZxERgT8AAAAAAADIQu85+v5CLuY/JMSC/72/zj+19AzXCGusP8xQRtKrsoM/hDpOm+DXVT8AQeYdC8IQ8D9uv4gaTzubPDUz+6k99u8/XdzYnBNgcbxhgHc+muzvP9FmhxB6XpC8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")}function getBinarySync(file){if(ArrayBuffer.isView(file)){return file}if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}async function getWasmBinary(binaryFile){return getBinarySync(binaryFile)}async function instantiateArrayBuffer(binaryFile,imports){try{var binary=await getWasmBinary(binaryFile);var instance=await WebAssembly.instantiate(binary,imports);return instance}catch(reason){err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)}}async function instantiateAsync(binary,binaryFile,imports){return instantiateArrayBuffer(binaryFile,imports)}function getWasmImports(){return{a:wasmImports}}async function createWasm(){function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["s"];updateMemoryViews();wasmTable=wasmExports["u"];removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){return receiveInstance(result["instance"])}var info=getWasmImports();if(Module["instantiateWasm"]){return new Promise((resolve,reject)=>{Module["instantiateWasm"](info,(mod,inst)=>{resolve(receiveInstance(mod,inst))})})}wasmBinaryFile??=findWasmBinary();try{var result=await instantiateAsync(wasmBinary,wasmBinaryFile,info);var exports=receiveInstantiationResult(result);return exports}catch(e){readyPromiseReject(e);return Promise.reject(e)}}class ExitStatus{name="ExitStatus";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var onPostRuns=[];var addOnPostRun=cb=>onPostRuns.push(cb);var onPreRuns=[];var addOnPreRun=cb=>onPreRuns.push(cb);var base64Decode=b64=>{var b1,b2,i=0,j=0,bLength=b64.length;var output=new Uint8Array((bLength*3>>2)-(b64[bLength-2]=="=")-(b64[bLength-1]=="="));for(;i<bLength;i+=4,j+=3){b1=base64ReverseLookup[b64.charCodeAt(i+1)];b2=base64ReverseLookup[b64.charCodeAt(i+2)];output[j]=base64ReverseLookup[b64.charCodeAt(i)]<<2|b1>>4;output[j+1]=b1<<4|b2>>2;output[j+2]=b2<<6|base64ReverseLookup[b64.charCodeAt(i+3)]}return output};var noExitRuntime=true;class ExceptionInfo{constructor(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24}set_type(type){HEAPU32[this.ptr+4>>2]=type}get_type(){return HEAPU32[this.ptr+4>>2]}set_destructor(destructor){HEAPU32[this.ptr+8>>2]=destructor}get_destructor(){return HEAPU32[this.ptr+8>>2]}set_caught(caught){caught=caught?1:0;HEAP8[this.ptr+12]=caught}get_caught(){return HEAP8[this.ptr+12]!=0}set_rethrown(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13]=rethrown}get_rethrown(){return HEAP8[this.ptr+13]!=0}init(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)}set_adjusted_ptr(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr}get_adjusted_ptr(){return HEAPU32[this.ptr+16>>2]}}var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_throw=(ptr,type,destructor)=>{var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast};var __abort_js=()=>abort("");var embindRepr=v=>{if(v===null){return"null"}var t=typeof v;if(t==="object"||t==="array"||t==="function"){return v.toString()}else{return""+v}};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret="";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError=Module["BindingError"]=class BindingError extends Error{constructor(message){super(message);this.name="BindingError"}};var throwBindingError=message=>{throw new BindingError(message)};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type "${name}" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){return sharedRegisterType(rawType,registeredInstance,options)}var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];case 8:return signed?pointer=>HEAP64[pointer>>3]:pointer=>HEAPU64[pointer>>3];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);var isUnsignedType=name.indexOf("u")!=-1;if(isUnsignedType){maxRange=(1n<<64n)-1n}registerType(primitiveType,{name,fromWireType:value=>value,toWireType:function(destructors,value){if(typeof value!="bigint"&&typeof value!="number"){throw new TypeError(`Cannot convert "${embindRepr(value)}" to ${this.name}`)}if(typeof value=="number"){value=BigInt(value)}return value},argPackAdvance:GenericWireTypeSize,readValueFromPointer:integerReadValueFromPointer(name,size,!isUnsignedType),destructorFunction:null})};var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name,fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:GenericWireTypeSize,readValueFromPointer:function(pointer){return this["fromWireType"](HEAPU8[pointer])},destructorFunction:null})};var shallowCopyInternalPointer=o=>({count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType});var throwInstanceAlreadyDeleted=obj=>{function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+" instance already deleted")};var finalizationRegistry=false;var detachFinalizer=handle=>{};var runDestructor=$$=>{if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}};var releaseClassHandle=$$=>{$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}};var attachFinalizer=handle=>{if("undefined"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)};var deletionQueue=[];var flushPendingDeletes=()=>{while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj["delete"]()}};var delayFunction;var init_ClassHandle=()=>{let proto=ClassHandle.prototype;Object.assign(proto,{isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;other.$$=other.$$;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right},clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}},delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}},isDeleted(){return!this.$$.ptr},deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}});const symbolDispose=Symbol.dispose;if(symbolDispose){proto[symbolDispose]=proto["delete"]}};function ClassHandle(){}var createNamedFunction=(name,func)=>Object.defineProperty(func,"name",{value:name});var registeredPointers={};var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(...args){if(!proto[methodName].overloadTable.hasOwnProperty(args.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[args.length].apply(this,args)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module[name].overloadTable.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var char_0=48;var char_9=57;var makeLegalFunctionName=name=>{name=name.replace(/[^a-zA-Z0-9_]/g,"$");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return`_${name}`}return name};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}var upcastPointer=(ptr,ptrClass,desiredClass)=>{while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr};function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass "${embindRepr(handle)}" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle||!handle.$$){throwBindingError(`Cannot pass "${embindRepr(handle)}" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError("Passing raw pointer to smart pointer is illegal")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle["clone"]();ptr=this.rawShare(ptr,Emval.toHandle(()=>clonedHandle["delete"]()));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError("Unsupporting sharing policy")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass "${embindRepr(handle)}" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function readPointer(pointer){return this["fromWireType"](HEAPU32[pointer>>2])}var downcastPointer=(ptr,ptrClass,desiredClass)=>{if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)};var registeredInstances={};var getBasestPointer=(class_,ptr)=>{if(ptr===undefined){throwBindingError("ptr should not be undefined")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr};var getInheritedInstance=(class_,ptr)=>{ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]};var InternalError=Module["InternalError"]=class InternalError extends Error{constructor(message){super(message);this.name="InternalError"}};var throwInternalError=message=>{throw new InternalError(message)};var makeClassHandle=(prototype,record)=>{if(!record.ptrType||!record.ptr){throwInternalError("makeClassHandle requires ptr and ptrType")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError("Both smartPtrType and smartPtr must be specified")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record,writable:true}}))};function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance["clone"]()}else{var rv=registeredInstance["clone"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}var init_RegisteredPointer=()=>{Object.assign(RegisteredPointer.prototype,{getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr},destructor(ptr){this.rawDestructor?.(ptr)},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,fromWireType:RegisteredPointer_fromWireType})};function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this["toWireType"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this["toWireType"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this["toWireType"]=genericPointerToWireType}}var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError("Replacing nonexistent public symbol")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var embind__requireFunction=(signature,rawFunction,isAsync=false)=>{signature=readLatin1String(signature);function makeDynCaller(){var rtn=getWasmTableEntry(rawFunction);return rtn}var fp=makeDynCaller();if(typeof fp!="function"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};class UnboundTypeError extends Error{}var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([", "]))};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(type=>typeDependencies[type]=dependentTypes);function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError("Mismatched type converter count")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};var __embind_register_class=(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor)=>{name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);upcast&&=embind__requireFunction(upcastSignature,upcast);downcast&&=embind__requireFunction(downcastSignature,downcast);rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],base=>{base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(name,function(...args){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(`Use 'new' to construct ${name}`)}if(undefined===registeredClass.constructor_body){throw new BindingError(`${name} has no accessible constructor`)}var body=registeredClass.constructor_body[args.length];if(undefined===body){throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`)}return body.apply(this,args)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);if(registeredClass.baseClass){registeredClass.baseClass.__derivedClasses??=[];registeredClass.baseClass.__derivedClasses.push(registeredClass)}var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+"*",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})};var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function usesDestructorStack(argTypes){for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){return true}}return false}function createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync){var needsDestructorStack=usesDestructorStack(argTypes);var argCount=argTypes.length-2;var argsList=[];var argsListWired=["fn"];if(isClassMethodFunc){argsListWired.push("thisWired")}for(var i=0;i<argCount;++i){argsList.push(`arg${i}`);argsListWired.push(`arg${i}Wired`)}argsList=argsList.join(",");argsListWired=argsListWired.join(",");var invokerFnBody=`return function (${argsList}) {\n`;if(needsDestructorStack){invokerFnBody+="var destructors = [];\n"}var dtorStack=needsDestructorStack?"destructors":"null";var args1=["humanName","throwBindingError","invoker","fn","runDestructors","retType","classParam"];if(isClassMethodFunc){invokerFnBody+=`var thisWired = classParam['toWireType'](${dtorStack}, this);\n`}for(var i=0;i<argCount;++i){invokerFnBody+=`var arg${i}Wired = argType${i}['toWireType'](${dtorStack}, arg${i});\n`;args1.push(`argType${i}`)}invokerFnBody+=(returns||isAsync?"var rv = ":"")+`invoker(${argsListWired});\n`;if(needsDestructorStack){invokerFnBody+="runDestructors(destructors);\n"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?"thisWired":"arg"+(i-2)+"Wired";if(argTypes[i].destructorFunction!==null){invokerFnBody+=`${paramName}_dtor(${paramName});\n`;args1.push(`${paramName}_dtor`)}}}if(returns){invokerFnBody+="var ret = retType['fromWireType'](rv);\n"+"return ret;\n"}else{}invokerFnBody+="}\n";return[args1,invokerFnBody]}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=usesDestructorStack(argTypes);var returns=argTypes[0].name!=="void";var closureArgs=[humanName,throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];for(var i=0;i<argCount-2;++i){closureArgs.push(argTypes[i+2])}if(!needsDestructorStack){for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){if(argTypes[i].destructorFunction!==null){closureArgs.push(argTypes[i].destructorFunction)}}}let[args,invokerFnBody]=createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync);var invokerFn=new Function(...args,invokerFnBody)(...closureArgs);return createNamedFunction(humanName,invokerFn)}var __embind_register_class_constructor=(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor)=>{var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`constructor ${classType.name}`;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`)}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})};var getFunctionName=signature=>{signature=signature.trim();const argsIndex=signature.indexOf("(");if(argsIndex===-1)return signature;return signature.slice(0,argsIndex)};var __embind_register_class_function=(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync,isNonnullReturn)=>{var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);methodName=getFunctionName(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker,isAsync);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`${classType.name}.${methodName}`;if(methodName.startsWith("@@")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module["count_emval_handles"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(`Cannot use deleted val. handle = ${handle}`)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};var EmValType={name:"emscripten::val",fromWireType:handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},toWireType:(destructors,value)=>Emval.toHandle(value),argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this["fromWireType"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this["fromWireType"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name,fromWireType:value=>value,toWireType:(destructors,value)=>value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})};var __embind_register_function=(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync,isNonnullReturn)=>{var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);name=getFunctionName(name);rawInvoker=embind__requireFunction(signature,rawInvoker,isAsync);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,argTypes=>{var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes("unsigned");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name,fromWireType,toWireType,argPackAdvance:GenericWireTypeSize,readValueFromPointer:integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name,fromWireType:decodeMemoryView,argPackAdvance:GenericWireTypeSize,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:true})};var EmValOptionalType=Object.assign({optional:true},EmValType);var __embind_register_optional=(rawOptionalType,rawType)=>{registerType(rawOptionalType,EmValOptionalType)};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx=0,maxBytesToRead=NaN)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=true;registerType(rawType,{name,fromWireType(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join("")}_free(value);return str},toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value=="string";if(!(valueIsOfTypeString||ArrayBuffer.isView(value)&&value.BYTES_PER_ELEMENT==1)){throwBindingError("Cannot pass non-string to std::string")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(valueIsOfTypeString){if(stdStringIsUTF8){stringToUTF8(value,ptr,length+1)}else{for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(base);throwBindingError("String has UTF-16 code units that do not fit in 8 bits")}HEAPU8[ptr+i]=charCode}}}else{HEAPU8.set(value,ptr)}if(destructors!==null){destructors.push(_free,base)}return base},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str="";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str="";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name,fromWireType:value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},toWireType:(destructors,value)=>{if(!(typeof value=="string")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name,argPackAdvance:0,fromWireType:()=>undefined,toWireType:(destructors,o)=>undefined})};var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`)}return impl};var __emval_take_value=(type,arg)=>{type=requireRegisteredType(type,"_emval_take_value");var v=type["readValueFromPointer"](arg);return Emval.toHandle(v)};var abortOnCannotGrowMemory=requestedSize=>{abort("OOM")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};for(var base64ReverseLookup=new Uint8Array(123),i=25;i>=0;--i){base64ReverseLookup[48+i]=52+i;base64ReverseLookup[65+i]=i;base64ReverseLookup[97+i]=26+i}base64ReverseLookup[43]=62;base64ReverseLookup[47]=63;embind_init_charCodes();init_ClassHandle();init_RegisteredPointer();init_emval();{if(Module["noExitRuntime"])noExitRuntime=Module["noExitRuntime"];if(Module["print"])out=Module["print"];if(Module["printErr"])err=Module["printErr"];if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"]}var wasmImports={h:___cxa_throw,o:__abort_js,f:__embind_register_bigint,i:__embind_register_bool,m:__embind_register_class,l:__embind_register_class_constructor,c:__embind_register_class_function,q:__embind_register_emval,e:__embind_register_float,g:__embind_register_function,b:__embind_register_integer,a:__embind_register_memory_view,n:__embind_register_optional,r:__embind_register_std_string,d:__embind_register_std_wstring,j:__embind_register_void,k:__emval_take_value,p:_emscripten_resize_heap};var wasmExports=await createWasm();var ___wasm_call_ctors=wasmExports["t"];var ___getTypeName=wasmExports["v"];var _malloc=wasmExports["w"];var _free=wasmExports["x"];function run(){if(runDependencies>0){dependenciesFulfilled=run;return}preRun();if(runDependencies>0){dependenciesFulfilled=run;return}function doRun(){Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module["onRuntimeInitialized"]?.();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(()=>{setTimeout(()=>Module["setStatus"](""),1);doRun()},1)}else{doRun()}}function preInit(){if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].shift()()}}}preInit();run();moduleRtn=readyPromise;


  return moduleRtn;
}
);
})();
export default Calc;
